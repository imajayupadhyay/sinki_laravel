# Nginx Configuration for sinki.ai with SSR Support
# Updated for Inertia.js Server-Side Rendering

# Rate limiting for SSR endpoint protection
limit_req_zone $binary_remote_addr zone=ssr_limit:10m rate=10r/s;

# Upstream for SSR daemon
upstream ssr_backend {
    server 127.0.0.1:13714;
    keepalive 8;
}

server {
    server_name sinki.ai www.sinki.ai;
    root /var/www/sinki.io/public;

    # Security headers (enhanced for SSR)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # SSR-specific headers
    add_header X-SSR-Enabled "true" always;

    index index.php;
    charset utf-8;

    # Enable gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/xml+rss
        application/javascript
        application/json
        image/svg+xml;

    # Cache static assets aggressively
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Asset-Cache "HIT";
        access_log off;
    }

    # Main application routes (SSR-enabled)
    location / {
        # Try static files first, then Laravel
        try_files $uri $uri/ /index.php?$query_string;

        # Add headers to help with SSR debugging
        add_header X-Route-Handler "laravel-ssr" always;
    }

    # Favicon and robots.txt
    location = /favicon.ico {
        access_log off;
        log_not_found off;
        expires 1y;
    }
    location = /robots.txt  {
        access_log off;
        log_not_found off;
        expires 1d;
    }

    # SSR health check endpoint (optional)
    location = /ssr-health {
        access_log off;
        proxy_pass http://ssr_backend;
        proxy_method GET;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 2s;
        proxy_send_timeout 2s;
        proxy_read_timeout 2s;
    }

    # Error pages
    error_page 404 /index.php;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/html;
    }

    # PHP processing with enhanced settings for SSR
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_index index.php;

        # Enhanced FastCGI settings for better SSR performance
        fastcgi_connect_timeout 60s;
        fastcgi_send_timeout 180s;
        fastcgi_read_timeout 180s;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;

        # Pass SSR-related information to PHP
        fastcgi_param HTTP_X_SSR_ENABLED "true";
        fastcgi_param HTTP_X_ORIGINAL_HOST $host;

        include fastcgi_params;
    }

    # Security: Hide sensitive files
    location ~ /\.(?!well-known).* {
        deny all;
    }

    # Hide Laravel-specific directories
    location ~ ^/(storage|bootstrap/cache)/ {
        deny all;
    }

    # Hide SSR build files from direct access
    location ~ ^/bootstrap/ssr/ {
        deny all;
    }

    # Hide environment files
    location ~ /\.(env|git) {
        deny all;
    }

    # SSL Configuration (managed by Certbot)
    listen 443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/sinki.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sinki.ai/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # HTTP/2 Server Push for critical resources (optional)
    location = /index.php {
        # Push critical CSS and JS for faster loading
        http2_push /build/assets/app.css;
        http2_push /build/assets/app.js;

        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # Logging with enhanced format for SSR debugging
    access_log /var/log/nginx/sinki.ai-access.log combined;
    error_log /var/log/nginx/sinki.ai-error.log warn;
}

# HTTP to HTTPS redirect (managed by Certbot)
server {
    listen 80;
    server_name sinki.ai www.sinki.ai;

    # Allow Let's Encrypt validation
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/sinki.io/public;
    }

    # Redirect everything else to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Optional: Separate server block for monitoring SSR daemon directly
server {
    listen 127.0.0.1:8080;
    server_name localhost;

    # Internal monitoring endpoint
    location /ssr-status {
        access_log off;
        proxy_pass http://ssr_backend;
        allow 127.0.0.1;
        deny all;
    }

    # Nginx status (for monitoring)
    location /nginx-status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
}